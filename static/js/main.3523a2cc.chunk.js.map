{"version":3,"sources":["components/ToolProvider.js","components/Canvas/Canvas.js","assets/select.svg","assets/select-active.svg","assets/rectangle.svg","assets/rectangle-active.svg","assets/ellipse.svg","assets/ellipse-active.svg","assets/triangle.svg","assets/triangle-active.svg","assets/line.svg","assets/line-active.svg","assets/arrow.svg","assets/arrow-active.svg","components/ToolBar/ToolBar.js","App.js","reportWebVitals.js","index.js"],"names":["ToolContext","React","createContext","children","useState","tool","setTool","Provider","value","Canvas","useContext","action","setAction","selected","setSelected","elements","setElements","canvasRef","useRef","roughCanvasRef","generator","rough","useLayoutEffect","canvas","current","width","window","innerWidth","height","innerHeight","style","context","getContext","scale","clearRect","forEach","element","draw","createElement","id","type","coords","lockRatio","x1","y1","x2","y2","options","fill","line","rectangle","ellipse","path","Math","sqrt","radians","diffX","diffY","newX","cos","sin","newY","newX2","newY2","offset","roughness","stroke","strokeWidth","strokeLineDash","updateElement","updatedElement","newElements","outlineElement","length","resizer","getDistance","a","b","pow","x","y","getElementAtPosition","map","position","getPositionWithinElement","find","getAdjustedCoordinates","minX","min","maxX","max","minY","maxY","abs","topLeft","nearPoint","topRight","bottomLeft","bottomRight","edge","c","distance","start","end","inside","name","addResizeHandler","outline","prevState","removeResizeHandler","splice","removeElement","setCursor","ref","onMouseDown","event","clientX","clientY","offsetX","offsetY","target","cursor","onMouseUp","index","onMouseMove","elementToUpdate","ToolBar","className","Tool","images","select","selectActive","rectangleActive","ellipseActive","triangle","triangleActive","lineActive","arrow","arrowActive","props","inactiveImg","activeImg","checked","onChange","src","alt","charAt","toUpperCase","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3523a2cc.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst initialState = 'rectangle'\r\n\r\nexport const ToolContext = React.createContext()\r\n\r\nexport default ({ children }) => {\r\n    const [tool, setTool] = useState(initialState)\r\n\r\n    return (\r\n        <ToolContext.Provider value={[tool, setTool]}>{ children }</ToolContext.Provider>\r\n    )\r\n}\r\n","import React, { useRef, useEffect, useLayoutEffect, useState, useContext } from 'react'\r\nimport { ToolContext } from '../ToolProvider'\r\nimport rough from 'roughjs/bundled/rough.esm'\r\n\r\nconst useHistory = (initialState) => {\r\n    // Undo / Redo\r\n}\r\n\r\nexport default function Canvas() {\r\n    const [tool, setTool]         = useContext(ToolContext)\r\n    const [action, setAction]     = useState(null)\r\n    const [selected, setSelected] = useState(null)\r\n    const [elements, setElements] = useState([])\r\n\r\n    const canvasRef = useRef(null)\r\n    const roughCanvasRef = useRef(null)\r\n    const generator = rough.generator()\r\n\r\n    useLayoutEffect(() => {\r\n        const canvas  = canvasRef.current\r\n        canvas.width = window.innerWidth * 2\r\n        canvas.height = window.innerHeight * 2\r\n        canvas.style.width = `${window.innerWidth}px`\r\n        canvas.style.height = `${window.innerHeight}px`\r\n\r\n        roughCanvasRef.current = rough.canvas(canvas)\r\n\r\n        const context = canvas.getContext('2d')\r\n        context.scale(2, 2)\r\n        context.clearRect(0, 0, canvas.width, canvas.height)\r\n        elements.forEach( ({element}) => roughCanvasRef.current.draw(element) )\r\n    }, [elements])\r\n    \r\n    /*useLayoutEffect(() => {\r\n        console.log('called')\r\n        if(selected) {\r\n            removeResizeHandler()            \r\n            //addResizeHandler(selected)\r\n        } else {            \r\n            removeResizeHandler()\r\n        }\r\n        \r\n    }, [selected])*/\r\n\r\n    const handleMouseUp = () => {\r\n        if(action === 'drawing' || action === 'resizing') {\r\n            const index = elements.length - 1\r\n            const { x1, y1, x2, y2 } = getAdjustedCoordinates(elements[index])\r\n            updateElement(index, tool, { x1, y1, x2, y2 })\r\n        }\r\n\r\n        setAction('none')       \r\n    }\r\n\r\n    const handleMouseDown = (event) => {\r\n        const {clientX, clientY} = event        \r\n\r\n        if(tool === 'selection') {            \r\n            const element = getElementAtPosition(clientX, clientY)\r\n            \r\n            if(element) {\r\n                const { x1, y1, x2, y2 } = element\r\n\r\n                if(selected && selected.id === element.id) {\r\n                    const width = x2 - x1\r\n                    const height = y2 - y1\r\n                    setSelected({...element, offsetX: clientX - x1, offsetY: clientY - y1, width, height })\r\n                    setElements(prevState => prevState)\r\n                    setAction('moving')                    \r\n                } else {\r\n                    removeResizeHandler()\r\n\r\n                    if(element.position !== 'empty' && !selected) {\r\n                        setSelected(element)\r\n                        addResizeHandler(element)\r\n                        event.target.style.cursor = element ? setCursor(element.position) : 'default'\r\n                    }\r\n                }             \r\n            } else {\r\n                setSelected(null)\r\n                removeResizeHandler()\r\n            }\r\n        } else {\r\n            selected && removeResizeHandler()\r\n            const id = elements.length\r\n            const coords = { x1: clientX, y1: clientY, x2: clientX, y2: clientY }\r\n            const element = createElement(id, tool, coords)\r\n            setElements(prevState => [...prevState, element])            \r\n            setAction('drawing')            \r\n        }\r\n    }\r\n\r\n    const handleMouseMove = (event) => {\r\n        const { clientX, clientY } = event\r\n\r\n        if(tool === 'selection' && selected) {\r\n            const element = getElementAtPosition(clientX, clientY)\r\n            event.target.style.cursor = element ? setCursor(element.position) : 'default'\r\n        }\r\n\r\n        if(action === 'drawing') {\r\n            const index = elements.length - 1\r\n            const elementToUpdate = elements[index]\r\n            const {x1, y1} = elementToUpdate            \r\n            const coords = { x1, y1, x2: clientX, y2: clientY }\r\n            updateElement(index, tool, coords)\r\n        } else if(action === 'moving') {\r\n            const { id, offsetX, offsetY, width, height } = selected           \r\n            const x = clientX - offsetX\r\n            const y = clientY - offsetY\r\n            updateElement(id, selected.type, { x1: x, y1: y, x2: x + width, y2: y + height })\r\n        }\r\n    }\r\n\r\n    const createElement = (id, type, coords, lockRatio = false) => {\r\n        let { x1, y1, x2, y2 } = coords\r\n        let element\r\n        const options = {\r\n            fill: 'red'\r\n        }\r\n\r\n        switch (type) {\r\n            case 'line':\r\n                element = generator.line(x1, y1, x2, y2, options)\r\n                break\r\n            case 'rectangle':\r\n                element = lockRatio\r\n                    ? generator.rectangle(x1, y1, x2 - x1, x2 - x1, options)\r\n                    : generator.rectangle(x1, y1, x2 - x1, y2 - y1, options) \r\n                break\r\n            case 'ellipse':\r\n                element = lockRatio \r\n                    ? generator.ellipse((x1 + x2) / 2, (y1 + y2) / 2, x2 - x1, x2 - x1, options)\r\n                    : generator.ellipse((x1 + x2) / 2, (y1 + y2) / 2, x2 - x1, y2 - y1, options)\r\n                break;\r\n            case 'triangle':\r\n                element = lockRatio\r\n                    ? generator.path(`M ${x1},${y2} L ${x2},${y2} L ${(x2 - x1) / 2 + x1},${(x1 - x2) * Math.sqrt(3) / 2 + y2} L ${x1},${y2} Z`, options)\r\n                    : generator.path(`M ${x1},${y2} L ${x2},${y2} L ${(x2 - x1) / 2 + x1},${(y2 - y1) / 2 + y1} L ${x1},${y2} Z`, options)                    \r\n                break\r\n            case 'arrow':\r\n                const radians = 0.4\r\n                const [ diffX, diffY ] = [ x1 - x2, y1 - y2 ]\r\n                const newX = ( diffX * Math.cos(radians) + diffY * Math.sin(radians) ) / 10 + x2\r\n                const newY = ( -diffX * Math.sin(radians) + diffY * Math.cos(radians) ) / 10 + y2\r\n                const newX2 = ( diffX * Math.cos(radians) - diffY * Math.sin(radians) ) / 10 + x2\r\n                const newY2 = ( diffX * Math.sin(radians) + diffY * Math.cos(radians) ) / 10 + y2\r\n\r\n                element = generator.path(`M ${x1},${y1} L ${x2},${y2} L ${newX},${newY} M ${x2},${y2} L ${newX2},${newY2} Z`)\r\n                break\r\n            case 'outline':\r\n                const offset = 6\r\n\r\n                element = generator.rectangle(x1 - offset, y1 - offset, x2 - x1 + 2 * offset, y2 - y1 + 2 * offset, {\r\n                    roughness: 0.5,\r\n                    stroke: 'grey',\r\n                    strokeWidth: 2,\r\n                    strokeLineDash: [5, 10]\r\n                })\r\n                break\r\n            default:\r\n                element = generator.line(x1, y1, x2, y2, options)\r\n                break\r\n        }\r\n\r\n        return { id, type, x1, y1, x2, y2, element }\r\n    }\r\n\r\n    const removeElement = (id, length = 1) => {\r\n        const newElements = [...elements]\r\n        newElements.splice(id, length)\r\n        setElements(newElements)\r\n    }\r\n\r\n    const updateElement = (id, type, coords) => {        \r\n        const updatedElement = createElement(id, type, coords)\r\n        const newElements = [...elements]\r\n        newElements[id] = updatedElement\r\n\r\n        if(selected && tool === 'selection') {\r\n            const { x1, y1 } = coords\r\n            const outlineElement = createElement(elements.length - 2, 'outline', coords)\r\n            const resizer = createElement(elements.length - 1, 'outline', { x1: x1 - 2, y1: y1 - 2, x2: x1 + 2, y2: y1 + 2 })\r\n            newElements[elements.length - 2] = outlineElement\r\n            newElements[elements.length - 1] = resizer\r\n        }\r\n        \r\n        setElements(newElements)        \r\n    }\r\n\r\n    const getDistance = (a, b) => Math.sqrt( Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2) )\r\n\r\n    const getElementAtPosition = (x, y) => {\r\n        return elements\r\n            .map(element => ({ ...element, position: getPositionWithinElement(x, y, element) }))\r\n            .find(element => element.position !== null)\r\n    }\r\n\r\n    const getAdjustedCoordinates = (element) => {\r\n        const { type, x1, y1, x2, y2 } = element\r\n        const minX = Math.min(x1, x2)\r\n        const maxX = Math.max(x1, x2)\r\n        const minY = Math.min(y1, y2)\r\n        const maxY = Math.max(y1, y2)\r\n\r\n        switch (type) {\r\n            case 'rectangle':\r\n            case 'ellipse':\r\n                return { x1: minX, y1: minY, x2: maxX, y2: maxY }            \r\n            case 'triangle':\r\n                return { x1, y1, x2, y2 } // To Fix\r\n            case 'line':\r\n                const coords = (x1 < x2 || (x1 === x2 && y1 < y2)) ? { x1, y1, x2, y2 } : { x1: x2, y1: y2, x2: x1, y2: y1 }\r\n                return coords\r\n            case 'arrow':\r\n                return { x1, y1, x2, y2 } // To Fix\r\n            default:\r\n                return { x1, y1, x2, y2 }\r\n        }\r\n    }\r\n\r\n    const getPositionWithinElement = (x, y, element) => {\r\n        const { type, x1, y1, x2, y2 } = element\r\n        const middleX = (x2 - x1) / 2\r\n        const middleY = (y2 - y1) / 2\r\n        const offset = 6\r\n\r\n        if(type === 'rectangle' || type === 'ellipse' || type === 'triangle') {\r\n            if(Math.abs(x - offset) > x1 && Math.abs(x + offset) < x2 && Math.abs(y - offset) > y1 && Math.abs(y + offset) < y2) {\r\n                if(element.element.options.fill) {\r\n                    return 'inside'\r\n                } else {\r\n                    return 'empty'\r\n                }            \r\n            } else {\r\n                const topLeft     = nearPoint(x, y, x1, y1, offset, 'topLeft')\r\n                const topRight    = nearPoint(x, y, x2, y1, offset, 'topRight')\r\n                const bottomLeft  = nearPoint(x, y, x1, y2, offset, 'bottomLeft')\r\n                const bottomRight = nearPoint(x, y, x2, y2, offset, 'bottomRight')\r\n                const edge = \r\n                    Math.abs(x - x1) < offset || \r\n                    Math.abs(x - x2) < offset || \r\n                    Math.abs(y - y1) < offset ||\r\n                    Math.abs(y - y2) < offset ? 'edge' : null\r\n\r\n                return topLeft || topRight || bottomLeft || bottomRight || edge\r\n            }\r\n        } else {\r\n            const a = { x: x1, y: y1 }\r\n            const b = { x: x2, y: y2 }\r\n            const c = { x, y }\r\n            const distance = getDistance(a, b) - ( getDistance(a, c) + getDistance(b, c) )\r\n            const start  = nearPoint(x, y, x1, y1, offset, 'start')\r\n            const end    = nearPoint(x, y, x2, y2, offset, 'end')\r\n            const inside = Math.abs(distance) < offset ? 'inside' : null\r\n\r\n            return start || end || inside\r\n        }\r\n    }\r\n\r\n    const nearPoint = (x, y, x1, y1, offset, name) => Math.abs(x - x1) < offset && Math.abs(y - y1) < offset ? name : null\r\n\r\n    const addResizeHandler = (element) => {\r\n        const { x1, y1, x2, y2 } = element\r\n        const outline = createElement(elements.length, 'outline', { x1, y1, x2, y2 })\r\n        setElements(prevState => [...prevState, outline])\r\n\r\n        const resizer = createElement(elements.length + 1, 'outline', { x1: x1 - 4, y1: y1 - 4, x2: x1 - 2, y2: y1 - 2 })\r\n        setElements(prevState => [...prevState, resizer])\r\n    }\r\n\r\n    const removeResizeHandler = () => {\r\n        const outline = elements.find(element => element.type === 'outline')\r\n    \r\n        if(outline) {\r\n            removeElement(outline.id, 2)\r\n            setSelected(null)\r\n            setAction(null)            \r\n        }\r\n    }\r\n\r\n    const setCursor = (position) => {\r\n        switch (position) {\r\n            case 'inside':\r\n                return 'move'\r\n        \r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvasRef}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseUp={handleMouseUp}\r\n            onMouseMove={handleMouseMove}\r\n        >Your browser doesn't support canvas\r\n        </canvas>\r\n    )\r\n} ","export default __webpack_public_path__ + \"static/media/select.70df1ec0.svg\";","export default __webpack_public_path__ + \"static/media/select-active.f1899dc7.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.f5d954ea.svg\";","export default __webpack_public_path__ + \"static/media/rectangle-active.72c4a5ef.svg\";","export default __webpack_public_path__ + \"static/media/ellipse.3530a60b.svg\";","export default __webpack_public_path__ + \"static/media/ellipse-active.957d413c.svg\";","export default __webpack_public_path__ + \"static/media/triangle.ecc9a150.svg\";","export default __webpack_public_path__ + \"static/media/triangle-active.f995cf0d.svg\";","export default __webpack_public_path__ + \"static/media/line.0ee8f270.svg\";","export default __webpack_public_path__ + \"static/media/line-active.53b5389c.svg\";","export default __webpack_public_path__ + \"static/media/arrow.b24a6f66.svg\";","export default __webpack_public_path__ + \"static/media/arrow-active.d3871a3f.svg\";","import React, { useContext } from 'react'\r\nimport { ToolContext } from '../ToolProvider'\r\nimport './ToolBar.css'\r\n\r\nimport select from '../../assets/select.svg'\r\nimport selectActive from '../../assets/select-active.svg'\r\nimport rectangle from '../../assets/rectangle.svg'\r\nimport rectangleActive from '../../assets/rectangle-active.svg'\r\nimport ellipse from '../../assets/ellipse.svg'\r\nimport ellipseActive from '../../assets/ellipse-active.svg'\r\nimport triangle from '../../assets/triangle.svg'\r\nimport triangleActive from '../../assets/triangle-active.svg'\r\nimport line from '../../assets/line.svg'\r\nimport lineActive from '../../assets/line-active.svg'\r\nimport arrow from '../../assets/arrow.svg'\r\nimport arrowActive from '../../assets/arrow-active.svg'\r\n\r\nexport default function ToolBar() {\r\n    return (\r\n        <div className=\"tool-box\">\r\n            <h2>TOOLS</h2>\r\n            <Tool key=\"1\" type=\"selection\" images={ [select, selectActive] }/>            \r\n            <Tool key=\"2\" type=\"rectangle\" images={ [rectangle, rectangleActive] }/>\r\n            <Tool key=\"3\" type=\"ellipse\" images={ [ellipse, ellipseActive] }/>\r\n            <Tool key=\"4\" type=\"triangle\" images={ [triangle, triangleActive] }/>\r\n            <Tool key=\"5\" type=\"line\" images={ [line, lineActive] }/>\r\n            <Tool key=\"6\" type=\"arrow\" images={ [arrow, arrowActive] }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Tool(props) {\r\n    const [tool, setTool] = useContext(ToolContext)\r\n    const {type, images} = props\r\n    const [inactiveImg, activeImg] = images\r\n\r\n    const handleChange = () => {\r\n        setTool(type)\r\n    }\r\n\r\n    return (        \r\n        <label className=\"tool\">\r\n            <input\r\n                type=\"radio\"\r\n                value={ type }\r\n                checked={ tool === type }\r\n                onChange={ handleChange }                \r\n            />\r\n            <img\r\n                src={ tool === type ? activeImg : inactiveImg } \r\n                alt={ type }\r\n            />\r\n            <span>{ type.charAt(0).toUpperCase() + type.slice(1) }</span>           \r\n        </label>        \r\n    )\r\n}","import Canvas from './components/Canvas/Canvas'\r\nimport ToolBar from './components/ToolBar/ToolBar'\r\nimport ToolContext from './components/ToolProvider'\r\nimport './App.css'\r\n\r\nexport default function App() {\r\n  return (\r\n    <ToolContext>\r\n      <ToolBar/>\r\n      <Canvas/>\r\n    </ToolContext>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}